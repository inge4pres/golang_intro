Go Introduction
14 Mar 2018
Platform teams
Tags: go golang

* The language

Is...

- developed @ Google since 2007
- stable version 1 since March 2012, one minor release ~ every 6 months
- community-driven (accepting PR on [[https://github.com/golang/go][Github]])
- compiled
- garbage collected: no explicit memory management, unless via `unsafe` pkg
- statically typed
- implementing [[https://en.wikipedia.org/wiki/Communicating_sequential_processes][CSP]] (communicating sequential processes) principle

Is not...

- purely OOP: some polymorphism via interfaces, no inheritance
- purely functional: no functors or monads built-ins, but you can roll your own
- threaded, unless via `runtime` or `unsafe` pkgs

* Installing

    brew install go

Or download from website [[https://golang.org/dl/]]

Once installed, you'll find in your `$HOME` the following directory tree

    go/         # $HOME/go/ is the default workspace since go 1.7
        src/    # source code (personal and dependencies)
        pkg/    # intermediate compilation artifacts
        bin/    # compiled binaries 

: layout directory is at the core of tooling workflow

Running

    go env

shows the configuration, where most important variables are `GOARCH`, `GOOS`, `GOPATH` and `GOROOT`.

* Tooling

The `go` binary is bundled with a set of tools to:

- run tests and syntax check
- lint and format
- debug and profile
- run programs locally
- (cross-)compile to binary

    go help

shows all the available subcommands 

    go tool dist list

shows all the available platform/architecture compilation targets.

* Development

Most popular IDEs

- IntelliJ IDEA + Go Plugin / Goland EAP
- VS Code
- vim + vim-go
- atom + go-plus
- LiteIDE
- Eclipse (?)

Anywhere you have a shell with the `go` binary you're set.

All the tools to do code-completion, test debugging, code search and others are available as go packages, so you can `go` `install` them!

* Hello Go

.play cmd/hello_go/main.go

: note the import section and the package main
With go installed you can now `get` the presenation repository 

    go get git.bravofly.com/fgualazzi/golang_intro.git

and it will be placed into 

    $HOME/go/src/git.bravofly.com/fgualazzi/golang_intro.git

* Running Hello Go locally

- via `go` `run` ...

    go run ./cmd/hello_go/main.go

- build in local dir and execute

    go build -o hello ./cmd/hello_go && ./hello

- build and install to `$HOME/go/bin`

    go install ./cmd/hello_go && hello_go

- cross-compile and run in docker

    make hello-go-docker 

* Types and variables

.play cmd/types_variables/main.go